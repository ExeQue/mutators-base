name: Build + Tests

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  tests:
    name: Run Tests (Pest)

    runs-on: ubuntu-latest

    if: "!contains(github.event.head_commit.message, 'skip-tests')"

    strategy:
      matrix:
        php:
          - 8.1
          - 8.2

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install PHP
      uses: shivammathur/setup-php@2.25.4
      with:
        extensions: mbstring
        php-version: ${{ matrix.php }}

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install

    - name: Run test suite (Pest)
      run: vendor/bin/pest --coverage --min=100
      env:
        XDEBUG_MODE: coverage

  mutations:
    name: Run Tests (Infection)

    runs-on: ubuntu-latest

    if: "!contains(github.event.head_commit.message, 'skip-tests')"

    strategy:
      matrix:
        php:
          - 8.1
          - 8.2

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install PHP
        uses: shivammathur/setup-php@2.25.4
        with:
          extensions: mbstring
          php-version: ${{ matrix.php }}

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install

      - name: Run test suite (Infection)
        run: vendor/bin/infection --threads=8
